{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"TYDI CSS": {
		"scope": "css",
		"prefix": "tydi-css-comment",
		"body": [
			"/*** ${1:Tydi} ~ ${2:Tydi CSS} » ${3:alpha-0.0.22} • Tydi™ Framework → AO™ / @iamodao / www.osawere.com - © October 2022 | Apache License ***/",
			"",
		],
		"description": "TYDI Framework - CSS Comment"
	},
	"TYDI JS": {
		"scope": "javascript,typescript",
		"prefix": "tydi-js-comment",
		"body": [
			"/*** ${1:Tydi} ~ ${2:Tydi Javascript} » ${3:alpha-0.0.22} • Tydi™ Framework → AO™ / @iamodao / www.osawere.com - © October 2022 | Apache License ***/",
			"",
		],
		"description": "TYDI Framework - JS Comment"
	},
	"TYDI HTML": {
		"scope": "html,php",
		"prefix": "tydi-html-comment",
		"body": [
			"<!-- ${1:Tydi} ~ ${2:Tydi HTML} » ${3:alpha-0.0.22} • Tydi™ Framework → AO™ / @iamodao / www.osawere.com - © October 2022 | Apache License -->",
			"",
		],
		"description": "TYDI Framework - HTML Comment"
	},
	"TYDI PHP": {
		"scope": "php",
		"prefix": "tydi-php-comment",
		"body": [
			"/*** ${1:Tydi} ~ ${2:Tydi PHP} » ${3:alpha-0.0.23} • Tydi™ Framework → AO™ / @iamodao / www.osawere.com - © January 2023 | Apache License ***/",
			"",
		],
		"description": "Tydi Framework - PHP Comment"
	},
	"TYDI PHP CLASS": {
		"scope": "php",
		"prefix": "tydi-php-class",
		"body": [
			"/*** ${1:Tydi}${2:X} ~ ${1:Tydi} ${3:Class} » ${4:alpha-0.0.23} • Tydi™ Framework → AO™ / @iamodao / www.osawere.com - © January 2023 | Apache License ***/",
			"",
			"class ${1:Tydi}${2:X} {",
			"",
			" // ◇ ----- CALL • Non-Existent Method » Error",
			" public function ${5:__call}(\\$method, \\$argument){",
			"  return ErrorX::is(__CLASS__, 'Method Unreachable', \\$method);",
			" }",
			"",
			"",
			"",
			"",
			"",
			" // ◇ ----- CALL_STATIC • Non-Existent Static Method » Error",
			" public static function ${6:__callStatic}(\\$method, \\$argument){",
			"  return ErrorX::is(__CLASS__, 'Method Unreachable', \\$method);",
			" }",
			"",
			"} // End Of Class ~ ${1:Tydi}${2:X}"
		],
		"description": "Tydi Framework - PHP Class"
	}
}